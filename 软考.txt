
计算机系统原理

1、硬件系统：运算器、控制器、存储器、输入设备和输出设备

2、CPU：包含运算器、控制器、寄存器、内部总线，基本功能：指令控制、操作控制、时序控制、数据处理。
2.1、运算器：由算术逻辑单元（ALU）、累加寄存器（AC）、数据缓冲寄存器（DR）和状态条件寄存器（PSW）组成，主要完成算术和逻辑运算
     ALU：实现对数据的算术运算和逻辑运算
     AC：为ALU提供一个工作区，用于暂存操作数或数据的地址，将运算结果存放在累加器中
     DR：保存由内存读写的指令或者数据字，作为CPU和内存、外设之间数据中转站
     PSW：保存由算术指令和逻辑指令运行或测试的结果建立的各种条件码内容
2.2、控制器：包括指令控制逻辑、时序控制逻辑、总线控制逻辑、中断控制逻辑
     指令控制：主要功能是从主存中取出指令并进行分析，取指令->分析指令->执行指令->形成下一条指令地址
     指令寄存器（IR）：当CPU执行指令时，先从内存中取出指令到缓冲寄存器中，再送入指令寄存器暂存，ID根据IR的内容产生微操作指令，最后执行指令。
     程序计数器（PC）：存储指令的地址，CPU自动修改PC的内容，使PC总是保持将要执行的下一条指令的地址
     地址寄存器（AR）：保存CPU所访问的内存单元地址
     指令译码器（ID）：指令包含操作码和操作数地址码，ID对操作码字段进行分析解释
      
3、数据表示：原码、反码、补码和移码，注意小数和浮点数的表示方法
3.1、原码：最高位是符号位，0表示正号，1表示负号
     反码：最高位是符号位，0表示正号，1表示负号，正数反码和原码相同，负数的反码是绝对值按位求反
     补码：最高位是符号位，0表示正号，1表示负号，负数的反码是绝对值按位求反+1 
     异或：Java异或的规则是转换成二进制比较，相同为0，不同为1
3.2、0原码：00000000，10000000，反码：00000000，1111111，补码：00000000
3.3、二进制数N，浮点数表示形式N=2^E*F，其中E为阶码，F为尾数，数值范围由阶码决定，精度由尾数决定
     浮点数相乘：阶码等于两乘数的阶码相加，尾数等于两乘数的尾数相乘
     浮点数相除：阶码等于两除数的阶码相减，尾数等于两除数的尾数相除

4、校验码：奇偶校验码、海明码、循环冗余校验码
4.1、奇偶校验码：在编码中增加一位校验位，使编码中的1的个数位奇数或者偶数
4.2、海明码：利用奇偶性俩检错和纠错的校验方法，
4.3、循环冗余校验码（CRC）：采用模2运算，n为CRC码的字长，信息码k位，校验码（n-k）位

5、指令系统：不同的处理器族支持不同的指令集体系结构
5.1、复杂指令集计算机（CISC）、精简指令集计算机（RISC）
5.2、指令的流水处理
     指令控制方式：顺序方式、重叠方式、流水方式
     流水线的种类：
     流水的相关处理： 
     吞吐率和流水建立时间：吞吐率是指单位时间内流水线处理机流出的结果数，即单位时间内执行的指令数
5.3、指令格式：操作码和操作数地址码。若操作码的长度为n，则可表示的指令为2^n条
     寻址方式：立即寻址、直接寻址、寄存器寻址、寄存器间接寻址、间接寻址
     立即寻址：操作数包含在指令中，立即数就跟在指令操作码后面，取出指令时即可得到操作数
     直接寻址：操作数存放在内存单元中，指令中直接给出操作数所在存储单元的地址
     寄存器寻址：操作数存放在某一寄存器中，指令中给出存放操作数的寄存器名
     寄存器间接寻址：操作数存放在内存单元，操作数所在存储单元的地址在某个寄存器中
     间接寻址：操作数存放在内存单元中，指令中直接给出操作数所在存储单元的地址的地址，需要进行两次访问内存的操作

6、存储系统：主存、外存
在一个存储器中容纳的存储单元总数通常称为该存储器的存储容量
6.1、存储体系：CPU->Cache->内存->外存
6.2、存储工作方式分类：读/写存储器（RAM）和只读存储器
     ROM：固定只读存储器，一般用于存放系统程序BIOS和用于微程序控制
     PROM：可编程只读存储器，一次性写入，不能再修改
     EPROM：可擦除可编程只读存储器，可写入可修改
     EEPROM：电擦除可编程只读存储器，用电擦除方法进行修改
     SRAM：不断电情况下信息一直保存
     DRAM：信息随时间逐渐消失，需定时刷新，一般用于计算机系统内存
6.3、访问方式分类：按地址访问、按内容访问
6.4、寻址方式分类：随机存储器、顺序存储器、直接存储器
6.5、Cache存储器：用户存放主存的部分拷贝信息，若访问的信息在，即为命中，命中时直接对Cache存储器寻址，同时需将主存中地址转换成Cache存储器地址。
     直接地址映像：主存的块与Cache的块对应关系是固定的
     全相联映像：主存与Cache存储器均分成大小相同的块，允许主存的任一块调入Cache存储器的任何一个块
     组相联映像：规定组采用直接映像方式而块采用全相联映像方式
     替换算法：提高Cache的命中率，包含随机替换算法、先进先出算法、近期最少使用算法、优化替换算法
     性能分析：命中率是一个重要指标
6.6、磁表面存储器：磁道、扇区、道密度、位密度、最大位密度
     平均访问时间：包括平均寻道时间和平均等待时间

7、输入/输出技术
7.1、I/O接口：由I/O系统控制CPU、存储器、外设之间的数据通信
     主机<->I/O接口<->I/O设备
     按数据传送的格式：并行接口、串行接口，一般情况下，接口与I/O设备采用串行方式，串行接口与主机采用并行方式
     按主机访问I/O设备控制方式：程序查询接口、中断接口、DMA接口、I/O通道方式、I/O处理机方式
     按时序控制方式：同步接口、异步接口
7.2、内存与接口的编址方法：独立编址方法、统一编址方法
7.3、CPU与I/O数据交换方式：
     直接程序控制：无条件传送、程序查询方式，采用的是串行工作的方式
     中断方式：IO设备准备数据的过程中CPU不查询IO设备状态，当IO设备准备好后CPU中断服务程序进行数据传输，数据传输往后返回原来的中断的程序
     直接存储器存取方式（DMA）：主存和I/O之间有一条直接数据通道，DMA方式避开了CPU
     区别：
     查询方式：CPU与设备串行工作、数据传送与主程序串行工作
     中断方式：CPU与设备并行工作、数据传送与主程序串行工作
     DMA方式：CPU与设备并行工作、数据传送与主程序并行工作
     适用范围：
     查询方式：适合于工作不太繁忙的系统
     中断方式：适合于CPU任务比较忙的情况下，尤其适合实时控制和紧急事件的处理
     DMA方式：适合于需要高速而又频繁地与存储器进行批量的数据交换的I/O设备

8、总线结构
8.1、系统总线：勇于计算机各组成部分的连接，总线分类：地址总线、数据总线和控制总线
     系统总线的性能指标主要由带宽、位宽和工作频率等
     系统总线的带宽指的是单位时间内总线上传送的数据量，即每秒钟传送的最大稳态数据传输率
     系统总线的位宽是指总线能同时传送的二进制数据的位数，或数据总线的位数
     总线的带宽=总线的工作频率*总线的位宽/8
8.2、数据总线：CPU与内存或输入设备通过数据总线传送数据信息，是双向的
     地址总线：用于传送CPU发出的地址信息，是单向的，地址总线的宽度决定了CPU的最大寻址能力
     控制总线：用来传送控制信号、时序信号和状态信息等，是双向的
8.3、常见总线：ISA、EISA、PCI（内总线、并行传输）、SCSI（外总线、并行传输）
               
9、加密技术&计算机可靠性
9.1、可逆加密算法
     对称加密： DES、3DES、AES
     非对称加密：RSA
9.2、不可逆加密算法
     MD5加密、SHA加密
9.3、RAS：可靠性R、可用性A、可维修性S，平均无故障时间、平均修复时间
     可靠性模型：串联系统、并联系统，一般计算系统的可靠性、失效率



程序设计语言基础

1、程序设计语言基本概念
1.1、编译程序和解释程序
     解释程序：直接解释执行源程序，或者翻译成中间代码加以执行
     编译程序：编译器将源程序翻译成目标程序，目标程序独立执行
1.2、程序设计语言定义：涉及语法、语义、语用
     程序设计语言基本成分：包括数据、运算、控制和传输

2、语言处理基础
2.1、汇编程序
2.2、编译程序、
     工作过程：词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成
     确定有限自动机（DFA）：用状态转换图和状态转换矩阵表示，转换图是一个有向图
     不确定有限自动机（NFA）：
2.3、解释程序



数据结构

1、线性结构
1.1、线性表
     线性表采用顺序存储和链式存储，主要的基本操作是插入、删除和查找
     顺序存储：用一组地址连续的存储单元依次存储线性表中的数据，特点查找快、增删慢
     顺序存储：表长为n的线性表，共有n+1个可插入位置，等概率下插入一个元素是平均移动元素数目为n/2
     顺序存储：表长为n的线性表，共有n个可删除位置，等概率下删除一个元素是平均移动元素数目为(n-1)/2
     链式存储：通过指针链接起来的结点存储数据元素，地址不连续，结构包括数据域+指针域，结点空间需要时才申请，特点查找慢、增删快
     p：是一个指针，指针里存放的是结点A的地址 
     p->：指针ｐ所存的地址对应的内容，这里p指针里存的是个节点，所以p->代表结点
     p->next：取这个节点的指针域的内容，得到下一个节点所在的内存地址
     p->data：取这个节点的数据域的内容
1.2、栈和队列
     栈：后进先出，队列：先进先出
     存储结构：顺序存储、链式存储
1.3、串
     串（字符串）是一种特殊的线性表，其数据元素为字符
     存储结构：顺序存储、链式存储

2、数组、矩阵和广义表
2.1、数组：采用顺序存储结构，二维数组可分为以行为主序和以列为主序 A[m][n]表示m行，n列，一般计算元素的存储地址
2.2、矩阵：
2.3、广义表

3、树
3.1、树结构是一种非常重要的非线性结构
     结点的度：指一个结点的子树个数
     叶子结点：也称为终端结点，指度为0的结点
     内部结点：度不为0的结点，也称为分支结点或非终端结点
     结点的层次：根为第一层，若某结点在第i层，则其孩子结点在第i+1层
     树的高度：一棵树的最大成熟记为树的高度
     有序（无序）树：若将树中结点的各子树看成是从左到右具有次序的，称有序树，否则为无序树
3.2、二叉树
     二叉树：由一个根结点及两棵不相交的、分别称为左子树和右子树的二叉树所组成
     满二叉树：深度为i的二叉树有2^i-1个结点，则称为满二叉树
     完全二叉树：在一个高度为h的二叉树，除了第h层，其余各层都是满的，且最后一层的结点依次从左到右分布，称为完全二叉树
     非完全二叉树：最后一层的结点未依次从左到右分布，称为非完全二叉树
     性质：1、第i层上最多有2^(i-1)个结点，2、深度为k的二叉树至多有2^k-1个结点，3、具有n个结点的完全二叉树的高度为[log2n]+1
     存储结构：顺序存储、链式存储
     顺序存储结构用一组地址连续的存储单元存储二叉树中的结点时，必须将树中的结点排查一个适当的线性序列，对于完全二叉树节省空间，对于一般二叉树不适用，造成空间浪费
     二叉树遍历：对含有n个结点的二叉树，遍历算法的时间复杂度都为O(n)
     先序遍历：先访问根结点，再遍历根结点的左子树，最后遍历根结点的右子树
     中序遍历：先遍历根结点的左子树，再访问根结点，最后遍历根结点的右子树
     后序遍历：先遍历根结点的左子树，再遍历根结点的右子树，最后访问根结点
3.3、最优二叉树
     最优二叉树又称为哈夫曼树，哈夫曼树不是唯一的，但最短带权路径长度只有一个
     由于哈夫曼树中没有度为1的结点，则一棵有n个叶子结点的哈夫曼树共有2n-1个结点
3.4、二叉查找树
     二叉查找树又称为二叉排序树、二叉检索树，或者是一棵空树
     1、左子树非空，左子树中的所有结点的值均小于根结点的值
     2、右子树非空，右子树中的所有结点的值均大于根结点的值
3.5、树和森林

4、图
4.1、图结构是一种非常重要的非线性结构
     图G是由集合V和E构成的二元组，记作G=（V，E），V是图中的顶点的非空有限集合，E是图中边的有限集合
     有向图、无向图、完全图，一个无向图有n个顶点，每个顶点与其他n-1个顶点之间都有边，成为无向完全图
     n个顶点无向完全图有n(n-1)/2条边，n个顶点有向完全图有n(n-1)条边
     度、出度和入度，顶点的度表示该顶点的入度和出度之和
     路径、子图、连通图和强连通图
4.2、存储结构：邻接矩阵表示法，邻接链表表示法
     无向图的邻接矩阵是对称的
     有向图的邻接链表需要和逆邻接表结合表示
4.3、图的遍历
     图的遍历过程中必须记下每个已访问过的顶点，避免重复访问
     深度优先搜索：依次从顶点V的未被访问的邻节点出发，进行深度优先搜索，直至和V有路径相通的顶点都被访问到
     邻接矩阵表示时，时间复杂度为O(n^2)，邻接链表作为存储结构时，时间复杂度为O(n+e)
     广度优先搜索：依次访问顶点V的各个未被访问的临接点（横向访问）
4.4、生成树及最小生成树
     生成树：包含图中全部顶点的一个极小连通子图（生成树不唯一），只有无向连通图才有生成树
     极大连通子图要求连通子图包含所有边，极小连通子图要求使图保存连通的前提下使边数最少
     最小生成树：生成树各边的权值总和最小时称为最小生成树
     Prim算法时间复杂度O(n^2)，适合于求边稠密的网的最小生成树
     Kruskal算法时间复杂度O(eloge)，适合于求边稀疏的网的最小生成树
4.5、拓扑排序和关键路径
4.6、最短路径

5、查找
5.1、静态查找表：不进行修改表结构的操作，查询或者检索某个特定的数据元素
     动态查找表：修改表结构的操作，除了查询或检索，还可以插入或者删除某个数据元素
5.2、静态查找：顺序查找：平均查找长度为：(n+1)/2，折半查找，索引查找：索引表+块内
     动态查找：二叉排序树
5.3、哈希表



6、排序











操作系统基础知识：

1、特征：并发性、共享性、虚拟性和不确定性
   功能：进程管理、文件管理、存储管理、设备管理和作业管理
   分类：批处理、分时、实时、网络、分布式、微机、嵌入式

2、进程是程序的一次执行。通常有程序、数据和进程控制块组成，其中PCB是进程存在的唯一标志
   进程三态模型：运行、就绪和阻塞
   进程五态模型：新建、就绪、运行、阻塞和终止
   进程通信：同步和互斥、信号量机制、
   进程三级调度：高级调度、中级调度、低级调度
   进程调度方式：可剥夺和不可剥夺
   进程调度算法：先来先服务、时间片轮转、优先级调度、多级反馈调度
   进程死锁条件：互斥条件、请求保持条件、不可剥夺条件和环路条件

3、存储管理方案：分区存储、分页存储、分段存储、段页式存储和虚拟存储

4、分页存储管理：
   分页原理：将一个进程的地址空间划分成若干个大小相等的区域，称为页。相应的，将主存空间划分成与页相同大小的若干个物理块，称为块或页框。为进程分配主存时，可将进程中若干页分别装入多个不相邻接的块中。
   地址结构：前一部分为页号P，后一部分为偏移量W，即页内地址。地址长度为32位，其中0-11位为页内地址（每页的大小为4KB=2^12/1024），12-31为页号，允许的地址空间大小最多为1MB=2^20/1024/1024个页

5、设备管理技术：通道、DMA、缓冲和Spooling技术

6、作业的状态：提交、后备、执行和完成


6、算法：
   时间复杂度、空间复杂度
   
   在数据结构/算法中，通常使用T(n)表示代码执行时间，n表示数据规模大小，f(n)表示代码执行次数综合，O(大写O)表示代码执行时间与f(n) 成正比例。

   假设算法的问题规模为n，那么操作单元数量便用函数f(n)来表示
   随着数据规模n的增大，算法执行时间的增长率和f(n)的增长率相同，这称作为算法的渐近时间复杂度，简称时间复杂度，记为 O(f(n))
   补充常用的时间复杂度所耗费的时间从小到大依次是：
   O(1)<O(logn)<O(n)< O(n*logn)<O(n^2)<O(n^3)< O(2^n)< O(n!)< O(n^n)




软件工程基础：

1、软件周期：问题定义、可行性分析、需求分析、总体设计、详细设计、编码和单元测试、综合测试、维护

2、软件模型：瀑布模型、增量模型、演化模型、螺旋模型、喷泉模型、统一过程、敏捷方法

3、软件需求：功能需求、非功能需求和设计约束

4、软件设计：概要设计、详细设计，设计原则：抽象、模块化、信息隐蔽、模块独立

5、软件测试方法：静态测试、动态测试，测试用例设计，单元测试、集成测试、确认测试、系统测试

6、软件调试：试探法、回溯法、对分查找法、归纳法、演绎法




数据库基础：

1、数据模型三要素：数据结构、数据操作、约束条件

计算机网络

1、OSI模型：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层

2、TCP/IP模型：网络接口层、网络层、传输层、应用层

3、A类地址：10.0.0.0-10.255.255.255 
   B类地址：172.16.0.0-172.31.255.255 
   C类地址：192.168.0.0-192.168.255.255

4、IP地址：A、B、C类IP地址，对应的子网掩码255.0.0.0、255.255.0.0、255.255.255.0

5、子网掩码

6、IPv4地址：2^32-1个，IPv6地址：2^128-1个

7、DNS域名服务，Telnet端口23，SMTP端口25，POP3端口110

8、网络拓扑：总线拓扑、环形拓扑、星型拓扑

9、信息安全：机密性、完整性、可用性、可控性、可审查性