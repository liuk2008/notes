
Linux环境：

	rpm包-在红帽LINUX、SUSE、Fedora可以直接进行安装，但在Ubuntu中却无法识别

	deb包-是Ubuntu的专利，在Ubuntu中双击deb包就可以进入自动安装进程

	tar.gz包-在所有的Linux版本中都能使用，但安装过程也最麻烦


常用命令：

	ls：列出目录
	cd：切换目录
	pwd：显示目前的目录
	mkdir：创建一个新的目录
	rmdir：删除一个空的目录
	cp：复制文件或目录
	rm：移除文件或目录
	mv：移动文件与目录

	tar：用于压缩解压，tar -xzvf test.tar.gz 
	gzip：压缩文件或文件夹为 .gz文件
	vi/vim：使用vi编辑器的命令
	cat：用途是连接文件或标准输入并打印。这个命令常用来显示文件内容
	grep：
	chmod：修改文件权限
	chown：改变文件所有者

	which 会在PATH变量指定的路径中，搜索某个系统命令的位置
	sudo：用来以其他身份来执行命令，预设的身份为root
	wget：从远程下载文件
	rpm：软件管理，用于安装、卸载 .rpm软件
	     rpm -hvi xxx.rpm（基于redhat）
	apt：软件管理，用于安装、卸载 .deb软件
	     apt install xxx.deb（基于Ubuntu）

	env：查看环境变量
	echo $PATH：查看PATH变量
	/etc/enviroment，~/.bahsrc，/etc/profile：系统环境配置文件

### 环境搭建 ###

1、在opt或home目录下建立Android、Java文件路径

2、配置Java环境变量
   1、打开配置文件：sudo vim /etc/profile
   2、添加环境变量
	export JAVA_HOME=/home/{user}/develop/jdk1.8.0_231
	export PATH=$PATH:${JAVA_HOME}/bin
	# 可有可无
	export JRE_HOME=${JAVA_HOME}/jre 
	export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  
   3、更新配置文件：source /etc/profile
   注意：
   1、若系统默认设置为OpenJDK，需重新设置系统JDK版本
   2、可使用wget下载JDK：wget http://download.oracle.com/otn-pub/java/jdk/xxxss/jdk-8u131-linux-x64.tar.gz

3、配置Android Studio
   1、在 /android-studio/bin 目录下，运行 sudo ./studio.sh 命令，启动 Android Studio
   2、配置JDK、AndroidSDK 路径，下载SDK
   3、添加环境变量
	#Android Studio
	export ANDROID_HOME=/home/{user}/develop/android-studio/bin
	export PATH=$PATH:${ANDROID_HOME}
	#Android SDK 
	export ANDROID_SDK_HOME=/home/{user}/develop/AndroidSDK
	export PATH=$PATH:${ANDROID_SDK_HOME}/platform-tools
   4、创建 Android Studio 快捷方式
	~~~

	~~~	
      注意赋予快捷方式权限才能启动

### Ubuntu下Git使用 ###

1、基本配置
   1、安装Git：sudo apt-get install git
   2、查看Git所有配置 git config --list
   3、编辑配置文件：git config --global --edit
   4、配置用户信息：git config --global user.name "xxx"
   5、生成SSH Key：ssh-keygen -t rsa，测试Github：ssh -T git@github.com

2、常用命令

   # git 仓库管理
	git clone git@github.com:xxx/xxx.git  拉项目 
	git remote add origin git@github.com:xxx/xxx.git 与远程仓库建立连接
	git init  初始化本地仓库
	git push origin xx 推送至远程分支
	git pull origin xx 从远程分支拉代码

   # git 文件添加，提交
	git add . 添加文件
	git commit -m "xx" 提交至仓库
	git commit -a -m "xx" 提交至仓库
	git reset HEAD xx 取消变更

	# git 分支查看与切换
	git branch -a 查看所有分支（包括远程分支）
	git branch -r 查看远程分支
	git branch 查看本地分支
	git branch xx 依据当前分支创建新分支
	git checkout xx 切换分支
	git merge xx 将xx分支合并到当前分支

   # git 解决冲突
	1、先commit本地文件，在pull远程代码
	2、手动修改本地文件解决冲突，然后commit，push文件
	
   # git 代码回退
	
3、链接GitHub
   1、初始化仓库：git init
   2、添加文件：git add xx.txt，git commit -m "xxx"
   3、建立链接：git remote add origin git@github.com:xxx/xxx.git
   4、远程推送：git push -u origin master，第一次推送加上 -u 参数

